@page "/"

<h3>FakeAsana</h3>

@for (int i = 0; i < 10; i++)
{
    var card = new Card();
    card.MyRef = i;
    card.Name = i.ToString()+"さん";
    <Card @ref="card" OnClick="@(() => CardClick(card))" OnMouseDown="@(()=>CardMouseDown(card))" OnMouseMove="@(()=>CardMouseMove(card))" OnMouseUp="@(()=>CardMouseUp(card))" OnMouseOver="@(()=>CardMouseOver(card))" OnMouseOut="@(()=>CardMouseOut(card))" ></Card>
    Cards.Add(card);
}


@code {
    private List<Card> Cards = new List<Card>();

    private async Task CardClick(Card card)
    {
        System.Console.WriteLine($"click {card.MyRef}, name {card.Name}");
    }

    private async Task CardMouseDown(Card card)
    {
        card.IsDragging = true;
        System.Console.WriteLine("mouse down");
    }

    private async Task CardMouseMove(Card card)
    {
        if (card.IsDragging)
        {
            System.Console.WriteLine("dragging");
        }
        else
        {
            System.Console.WriteLine("mouse move kasanatteruyo!!");
        }
    }

    private async Task CardMouseUp(Card card)
    {
        card.IsDragging = false;
        System.Console.WriteLine("mouse up");
    }

    private async Task CardMouseOver(Card card)
    {
        // カーソルと他エレメントが重なった時。つまりエレメント同士はとっくに重なってた状態
        if (card.IsDragging)
        {
            System.Console.WriteLine("mouse over(in)");
        }
        else
        {
            System.Console.WriteLine("kasanattayo!!");
        }
    }

    private async Task CardMouseOut(Card card)
    {
        if (card.IsDragging)
        {
            System.Console.WriteLine("mouse out");
        }
        else
        {
            System.Console.WriteLine("kasanari kaijo!!");
        }
    }
}
